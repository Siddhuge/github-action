name: gitops actions
on: workflow_dispatch
env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY: gitops-app
  EKS_CLUSTER: gitops-eks

jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Maven test
        run: mvn test

      - name: Checkstyle
        run: mvn checkstyle:checkstyle

      - name: Set Java 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      # - name: Setup SonarQube
      #   uses: warchant/setup-sonar-scanner@v7
        
      # - name: SonarQube Scan
      #   run: |
      #     sonar-scanner  
      #     -Dsonar.host.url=${{ secrets.SONAR_URL }} 
      #     -Dsonar.login=${{ secrets.SONAR_TOKEN }} 
      #     -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} 
      #     -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} 
      #     -Dsonar.sources=src/ 
      #     -Dsonar.junit.reportsPath=target/surefire-reports/ 
      #     -Dsonar.jacoco.reportsPath=target/jacoco.exec 
      #     -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml 
      #     -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/

  BUILD_AND_PUBLISH:
    runs-on: ubuntu-latest
    needs: Testing
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and Upload Image to ECR
        uses: appleboy/docker-ecr-action@master
        with:
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ env.AWS_REGION }}
          registry: ${{ secrets.REGISTRY }}
          repo: ${{ env.ECR_REPOSITORY }}
          tags: latest, ${{ github.run_number }}
          daemon_off: false
          dockerfile: ./Dockerfile
          context: ./

  DEPLOY_TO_EKS:
    runs-on: ubuntu-latest
    needs: BUILD_AND_PUBLISH
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get Kubeconfig file
        run: |
          aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER }} --region ${{ env.AWS_REGION }}
      
      - name: Print Kubeconfig
        run: |
          cat ~/.kube/config

      - name: Login to ECR
        run: |
          kubectl create secret docker-registry regcred \
            --docker-server=${{ secrets.REGISTRY }} \
            --docker-username=AWS \
            --docker-password=$(aws ecr get-login-password --region ${{ env.AWS_REGION }}) 
      
      - name: Deploy Helm
        uses: bitovi/github-actions-deploy-eks-helm@v1.2.8
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ env.AWS_REGION }}
          cluster_name: ${{ env.EKS_CLUSTER }}
          helm_chart_path: helm/gitopsappcharts
          namespace: default
          values: |
            appimage: ${{ secrets.REGISTRY }}/${{ env.ECR_REPOSITORY }},apptag=${{ github.run_number }}
          name: gitops-stack

      